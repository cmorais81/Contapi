// Data Governance API - Modelo Completo
// Versão: 2.0.0
// Autor: Carlos Morais
// Data: 26 de Dezembro de 2025
// Baseado na implementação da API reestruturada

Project DataGovernanceAPI {
  database_type: 'PostgreSQL'
  Note: '''
    # Data Governance API - Modelo Completo
    
    Sistema enterprise para governança de dados com:
    - Contratos de dados com versionamento semântico
    - Compliance multi-jurisdição (GDPR, LGPD, CCPA, etc.)
    - Auditoria completa de operações
    - Controles de acesso granulares (RBAC)
    - Qualidade de dados automatizada
    - Lineage completo para rastreabilidade
    
    **Arquitetura:** Clean Architecture + SOLID Principles
    **Performance:** 1000+ req/s
    **Compliance:** 10+ frameworks internacionais
  '''
}

// ========================================
// TABELAS DE USUÁRIOS E CONTROLE DE ACESSO
// ========================================

Table users {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  username varchar(50) [unique, not null]
  email varchar(255) [unique, not null]
  full_name varchar(255) [not null]
  password_hash varchar(255) [not null]
  is_active boolean [default: true]
  is_superuser boolean [default: false]
  last_login timestamp
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  Note: 'Usuários do sistema de governança de dados'
}

Table user_groups {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  group_name varchar(100) [unique, not null]
  description text
  permissions jsonb [default: '{}']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  Note: 'Grupos/roles de usuários para controle de acesso RBAC'
}

Table user_group_memberships {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  user_id uuid [not null, ref: > users._id]
  group_id uuid [not null, ref: > user_groups._id]
  assigned_at timestamp [default: `CURRENT_TIMESTAMP`]
  assigned_by_user_id uuid [ref: > users._id]
  
  indexes {
    (user_id, group_id) [unique]
  }
  
  Note: 'Associação usuário-grupo para RBAC'
}

// ========================================
// TABELAS DE COMPLIANCE E FRAMEWORKS
// ========================================

Table compliance_frameworks {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  framework_name varchar(255) [not null]
  framework_code varchar(50) [unique, not null]
  description text
  applicable_countries text[] [default: '{}']
  data_retention_requirements jsonb [default: '{}']
  consent_requirements jsonb [default: '{}']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  Note: '''
    Frameworks de compliance suportados:
    - GDPR (General Data Protection Regulation)
    - LGPD (Lei Geral de Proteção de Dados)
    - CCPA (California Consumer Privacy Act)
    - HIPAA (Health Insurance Portability)
    - SOX (Sarbanes-Oxley Act)
    - PIPEDA (Personal Information Protection)
  '''
}

// ========================================
// TABELAS PRINCIPAIS DE CONTRATOS
// ========================================

Table data_contracts {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  contract_name varchar(255) [not null]
  contract_description text
  contract_version varchar(50) [not null, default: '1.0.0']
  contract_status varchar(50) [not null, default: 'draft']
  data_classification varchar(50) [not null, default: 'internal']
  
  // Informações de negócio
  business_owner_id uuid [ref: > users._id]
  technical_owner_id uuid [ref: > users._id]
  data_steward_id uuid [ref: > users._id]
  
  // Informações geográficas e compliance
  country_code varchar(3)
  jurisdiction varchar(100)
  
  // Datas importantes
  effective_date timestamp
  expiration_date timestamp
  review_date timestamp
  
  // Configurações de retenção
  data_retention_days integer [default: 1095]
  purge_after_expiration boolean [default: false]
  
  // Metadados de controle
  approved_at timestamp
  approved_by_user_id uuid [ref: > users._id]
  created_by_user_id uuid [not null, ref: > users._id]
  updated_by_user_id uuid [ref: > users._id]
  previous_version_id uuid [ref: > data_contracts._id]
  
  // Timestamps
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    contract_status
    data_classification
    country_code
    business_owner_id
    created_by_user_id
    expiration_date
  }
  
  Note: '''
    Contratos de dados principais com:
    - Versionamento semântico (major.minor.patch)
    - Suporte multi-país e multi-jurisdição
    - Workflow de aprovação
    - Classificação de dados (public, internal, confidential, restricted)
    - Status: draft, review, approved, active, deprecated, archived
  '''
}

Table contract_versions {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  contract_id uuid [not null, ref: > data_contracts._id]
  version_number varchar(50) [not null]
  version_type varchar(20) [not null, default: 'minor']
  changelog text
  is_breaking_change boolean [default: false]
  migration_script text
  created_by_user_id uuid [not null, ref: > users._id]
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    contract_id
    version_number
    (contract_id, version_number) [unique]
  }
  
  Note: '''
    Histórico de versões dos contratos com:
    - Versionamento semântico (major, minor, patch)
    - Detecção automática de breaking changes
    - Scripts de migração para mudanças
    - Changelog detalhado
  '''
}

Table contract_compliance_frameworks {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  contract_id uuid [not null, ref: > data_contracts._id]
  framework_id uuid [not null, ref: > compliance_frameworks._id]
  compliance_status varchar(50) [default: 'pending']
  last_validation_date timestamp
  validation_results jsonb [default: '{}']
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    contract_id
    framework_id
    (contract_id, framework_id) [unique]
  }
  
  Note: '''
    Associação contrato-framework de compliance com:
    - Status: pending, compliant, non_compliant, warning
    - Resultados de validação detalhados
    - Histórico de validações
  '''
}

// ========================================
// TABELAS DE OBJETOS E ESTRUTURA DE DADOS
// ========================================

Table data_objects {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  contract_id uuid [not null, ref: > data_contracts._id]
  object_name varchar(255) [not null]
  object_type varchar(100) [not null]
  object_description text
  
  // Schema e estrutura
  schema_definition jsonb [default: '{}']
  data_format varchar(100)
  encoding varchar(50)
  
  // Localização e acesso
  storage_location text
  access_pattern varchar(100)
  
  // Qualidade e validação
  quality_rules jsonb [default: '{}']
  validation_rules jsonb [default: '{}']
  
  // Metadados de negócio
  business_glossary jsonb [default: '{}']
  tags text[] [default: '{}']
  
  // Configurações de segurança
  encryption_required boolean [default: false]
  masking_rules jsonb [default: '{}']
  access_controls jsonb [default: '{}']
  
  // Timestamps
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    contract_id
    object_type
    object_name
  }
  
  Note: '''
    Objetos de dados (tabelas, arquivos, streams, APIs) com:
    - Tipos: table, view, file, stream, api, dataset
    - Schema definition em JSON
    - Regras de qualidade e validação
    - Controles de segurança e mascaramento
  '''
}

Table data_object_fields {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  data_object_id uuid [not null, ref: > data_objects._id]
  field_name varchar(255) [not null]
  field_type varchar(100) [not null]
  field_description text
  
  // Propriedades do campo
  is_nullable boolean [default: true]
  is_primary_key boolean [default: false]
  is_foreign_key boolean [default: false]
  default_value text
  
  // Validação e qualidade
  validation_rules jsonb [default: '{}']
  quality_checks jsonb [default: '{}']
  
  // Classificação e segurança
  data_classification varchar(50) [default: 'internal']
  is_pii boolean [default: false]
  is_sensitive boolean [default: false]
  masking_type varchar(50)
  
  // Metadados de negócio
  business_name varchar(255)
  business_description text
  business_rules text
  
  // Ordem e agrupamento
  field_order integer
  field_group varchar(100)
  
  // Timestamps
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    data_object_id
    field_name
    is_pii
    is_sensitive
    (data_object_id, field_name) [unique]
  }
  
  Note: '''
    Campos/colunas dos objetos de dados com:
    - Classificação de dados (public, internal, confidential, restricted)
    - Identificação de PII e dados sensíveis
    - Tipos de mascaramento (hash, encrypt, tokenize, redact, partial)
    - Regras de negócio e validação
  '''
}

// ========================================
// TABELAS DE POLÍTICAS E CONTROLE DE ACESSO
// ========================================

Table access_policies {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  contract_id uuid [not null, ref: > data_contracts._id]
  policy_name varchar(255) [not null]
  policy_type varchar(50) [not null]
  policy_description text
  
  // Configuração da política
  policy_rules jsonb [not null, default: '{}']
  conditions jsonb [default: '{}']
  actions jsonb [default: '{}']
  
  // Escopo da política
  applies_to_objects text[] [default: '{}']
  applies_to_fields text[] [default: '{}']
  applies_to_users text[] [default: '{}']
  applies_to_groups text[] [default: '{}']
  
  // Status e vigência
  is_active boolean [default: true]
  effective_from timestamp [default: `CURRENT_TIMESTAMP`]
  effective_until timestamp
  
  // Metadados de controle
  created_by_user_id uuid [not null, ref: > users._id]
  approved_by_user_id uuid [ref: > users._id]
  
  // Timestamps
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    contract_id
    policy_type
    is_active
  }
  
  Note: '''
    Políticas de acesso e segurança com:
    - Tipos: access_control, data_masking, retention, quality, compliance
    - Escopo granular (objetos, campos, usuários, grupos)
    - Vigência temporal configurável
    - Regras e condições em JSON
  '''
}

// ========================================
// TABELAS DE AUDITORIA E MONITORAMENTO
// ========================================

Table audit_logs {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  contract_id uuid [ref: > data_contracts._id]
  user_id uuid [ref: > users._id]
  
  // Informações da ação
  action_type varchar(50) [not null]
  resource_type varchar(100) [not null]
  resource_id uuid
  
  // Detalhes da mudança
  change_description text
  old_values jsonb
  new_values jsonb
  change_summary jsonb [default: '{}']
  
  // Contexto da requisição
  ip_address inet
  user_agent text
  session_id varchar(255)
  
  // Timestamps
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    contract_id
    user_id
    action_type
    resource_type
    created_at
  }
  
  Note: '''
    Logs de auditoria completos com:
    - Ações: CREATE, READ, UPDATE, DELETE, APPROVE, ACCESS, EXPORT
    - Rastreamento de mudanças (old_values vs new_values)
    - Contexto da requisição (IP, user agent, sessão)
    - Análise de padrões e detecção de anomalias
  '''
}

// ========================================
// TABELAS DE QUALIDADE DE DADOS
// ========================================

Table quality_metrics {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  contract_id uuid [not null, ref: > data_contracts._id]
  data_object_id uuid [ref: > data_objects._id]
  field_id uuid [ref: > data_object_fields._id]
  
  // Informações da métrica
  metric_name varchar(255) [not null]
  metric_type varchar(100) [not null]
  metric_description text
  
  // Configuração da métrica
  metric_definition jsonb [not null, default: '{}']
  thresholds jsonb [default: '{}']
  
  // Resultados da execução
  last_execution_date timestamp
  last_result jsonb
  execution_status varchar(50)
  
  // Histórico de resultados
  execution_history jsonb [default: '[]']
  
  // Status da métrica
  is_active boolean [default: true]
  
  // Timestamps
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    contract_id
    data_object_id
    metric_type
    is_active
  }
  
  Note: '''
    Métricas de qualidade de dados com:
    - Tipos: completeness, accuracy, consistency, validity, uniqueness, timeliness
    - Definições configuráveis em JSON
    - Thresholds e alertas automáticos
    - Histórico de execuções
    - Status: pending, running, success, failed, warning
  '''
}

// ========================================
// TABELAS DE LINEAGE E RASTREABILIDADE
// ========================================

Table data_lineage {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  source_contract_id uuid [ref: > data_contracts._id]
  source_object_id uuid [ref: > data_objects._id]
  source_field_id uuid [ref: > data_object_fields._id]
  
  target_contract_id uuid [ref: > data_contracts._id]
  target_object_id uuid [ref: > data_objects._id]
  target_field_id uuid [ref: > data_object_fields._id]
  
  // Informações da transformação
  transformation_type varchar(100)
  transformation_logic text
  transformation_rules jsonb [default: '{}']
  
  // Metadados do lineage
  lineage_type varchar(50) [not null, default: 'field_to_field']
  confidence_score decimal(3,2) [default: 1.0]
  
  // Status e validação
  is_verified boolean [default: false]
  verified_by_user_id uuid [ref: > users._id]
  verified_at timestamp
  
  // Timestamps
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    source_contract_id
    target_contract_id
    lineage_type
  }
  
  Note: '''
    Lineage e relacionamentos entre dados com:
    - Tipos: field_to_field, object_to_object, contract_to_contract
    - Transformações detalhadas com lógica
    - Score de confiança (0.0 a 1.0)
    - Verificação manual por usuários
    - Rastreabilidade completa origem-destino
  '''
}

// ========================================
// TABELAS DE NOTIFICAÇÕES E ALERTAS
// ========================================

Table notifications {
  _id uuid [primary key, default: `uuid_generate_v4()`]
  user_id uuid [not null, ref: > users._id]
  contract_id uuid [ref: > data_contracts._id]
  
  // Conteúdo da notificação
  notification_type varchar(100) [not null]
  title varchar(255) [not null]
  message text [not null]
  
  // Status da notificação
  is_read boolean [default: false]
  read_at timestamp
  
  // Prioridade e categoria
  priority varchar(20) [default: 'medium']
  category varchar(100)
  
  // Metadados adicionais
  metadata jsonb [default: '{}']
  
  // Timestamps
  created_at timestamp [default: `CURRENT_TIMESTAMP`]
  updated_at timestamp [default: `CURRENT_TIMESTAMP`]
  
  indexes {
    user_id
    contract_id
    notification_type
    is_read
    priority
  }
  
  Note: '''
    Sistema de notificações com:
    - Tipos: contract_expiring, compliance_violation, quality_issue, approval_required, system_alert
    - Prioridades: low, medium, high, critical
    - Metadados extensíveis em JSON
    - Controle de leitura por usuário
  '''
}

// ========================================
// RELACIONAMENTOS E REFERÊNCIAS
// ========================================

// Relacionamentos de usuários
Ref: user_group_memberships.user_id > users._id [delete: cascade]
Ref: user_group_memberships.group_id > user_groups._id [delete: cascade]
Ref: user_group_memberships.assigned_by_user_id > users._id

// Relacionamentos de contratos
Ref: data_contracts.business_owner_id > users._id
Ref: data_contracts.technical_owner_id > users._id
Ref: data_contracts.data_steward_id > users._id
Ref: data_contracts.approved_by_user_id > users._id
Ref: data_contracts.created_by_user_id > users._id
Ref: data_contracts.updated_by_user_id > users._id
Ref: data_contracts.previous_version_id > data_contracts._id

// Relacionamentos de versões
Ref: contract_versions.contract_id > data_contracts._id [delete: cascade]
Ref: contract_versions.created_by_user_id > users._id

// Relacionamentos de compliance
Ref: contract_compliance_frameworks.contract_id > data_contracts._id [delete: cascade]
Ref: contract_compliance_frameworks.framework_id > compliance_frameworks._id [delete: cascade]

// Relacionamentos de objetos de dados
Ref: data_objects.contract_id > data_contracts._id [delete: cascade]
Ref: data_object_fields.data_object_id > data_objects._id [delete: cascade]

// Relacionamentos de políticas
Ref: access_policies.contract_id > data_contracts._id [delete: cascade]
Ref: access_policies.created_by_user_id > users._id
Ref: access_policies.approved_by_user_id > users._id

// Relacionamentos de auditoria
Ref: audit_logs.contract_id > data_contracts._id
Ref: audit_logs.user_id > users._id

// Relacionamentos de qualidade
Ref: quality_metrics.contract_id > data_contracts._id [delete: cascade]
Ref: quality_metrics.data_object_id > data_objects._id [delete: cascade]
Ref: quality_metrics.field_id > data_object_fields._id [delete: cascade]

// Relacionamentos de lineage
Ref: data_lineage.source_contract_id > data_contracts._id
Ref: data_lineage.source_object_id > data_objects._id
Ref: data_lineage.source_field_id > data_object_fields._id
Ref: data_lineage.target_contract_id > data_contracts._id
Ref: data_lineage.target_object_id > data_objects._id
Ref: data_lineage.target_field_id > data_object_fields._id
Ref: data_lineage.verified_by_user_id > users._id

// Relacionamentos de notificações
Ref: notifications.user_id > users._id [delete: cascade]
Ref: notifications.contract_id > data_contracts._id [delete: cascade]

